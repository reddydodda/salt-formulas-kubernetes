{%- from "kubernetes/map.jinja" import common with context -%}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: alertmanager
  namespace: {{ common.addons.get('alertmanager',{}).get('namespace') }}
  labels:
    k8s-app: alertmanager
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        k8s-app: alertmanager
      annotations:
        scheduler.alpha.kubernetes.io/tolerations: '[{"key":"CriticalAddonsOnly", "operator":"Exists"}]'
    spec:
      serviceAccountName: alertmanager
      priorityClassName: system-cluster-critical
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values: ["true"]
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
      - name: alertmanager
        image: "{{ common.addons.get('alertmanager',{}).get('image') }}"
        ports:
        - name: alertmanager
          containerPort: {{ common.addons.get('alertmanager',{}).get('bind', {}).get('port') }}
        env:
        - name: ALERTMANAGER_CONFIG_DIR
          value: "{{ common.addons.get('alertmanager',{}).get('dir', {}).get('config') }}"
        - name: ALERTMANAGER_DATA_DIR
          value: "{{ common.addons.get('alertmanager',{}).get('dir', {}).get('data') }}"
        - name: ALERTMANAGER_BIND_PORT
          value: "{{ common.addons.get('alertmanager',{}).get('bind', {}).get('port') }}"
        - name: ALERTMANAGER_BIND_ADDRESS
          value: "{{ common.addons.get('alertmanager',{}).get('bind', {}).get('address') }}"
        - name: ALERTMANAGER_DISCOVERY_DOMAIN
          value: "*.alertmanager.stacklight"
        - name: ALERTMANAGER_USE_STATIC_DATADIR
          value: "True"
        - name: ALERTMANAGER_KUBERNETES_DNS
          value: "True"
        volumeMounts:
        - name: config-volume
          mountPath: "{{ common.addons.get('alertmanager',{}).get('dir', {}).get('config') }}"
        - name: data-volume
          mountPath: "{{ common.addons.get('alertmanager',{}).get('dir', {}).get('data') }}"
      volumes:
      - name: config-volume
        hostPath:
          path: "{{ common.addons.get('alertmanager',{}).get('dir', {}).get('host_config') }}"
      - name: data-volume
        hostPath:
          path: "{{ common.addons.get('alertmanager',{}).get('dir', {}).get('host_data') }}"
